{"version":3,"sources":["logo.svg","components/sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["Menu","SubMenu","Layout","Sider","SideBar","Header","Content","Footer","App","style","minHeight","className","padding","margin","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAAe,I,yCCUGA,IAAXC,QACSC,IAATC,MA4CQC,ICjDPC,EAA4BH,IAA5BG,OAAQC,EAAoBJ,IAApBI,QAASC,EAAWL,IAAXK,OAsBVC,MArBf,WAGE,OAEE,cAAC,IAAD,CAAQC,MAAO,CAAEC,UAAW,SAA5B,SAEA,eAAC,IAAD,CAAQC,UAAU,cAAlB,UACM,cAACN,EAAD,CAAQM,UAAU,yBAAyBF,MAAO,CAAEG,QAAS,KAC7D,cAACN,EAAD,CAASG,MAAO,CAAEI,OAAQ,UAA1B,SACE,qBAAKF,UAAU,yBAAyBF,MAAO,CAAEG,QAAS,GAAIF,UAAW,KAAzE,4BAIF,cAACH,EAAD,CAAQE,MAAO,CAAEK,UAAW,UAA5B,wDCTKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.52714af4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React ,{useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Menu,Layout } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n      MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n} from '@ant-design/icons'\r\n\r\n\r\nconst {SubMenu} = Menu;\r\nconst {Sider} = Layout\r\n\r\n\r\nfunction SideBar(props)  {\r\n    const [collapsed,setCollapsed] = useState({\r\n        collapsed:false\r\n    });\r\n\r\n    const toggleCollapse = () => {\r\n        setCollapsed({\r\n            collapsed:true\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n     <>\r\n\r\n\r\n        <Menu\r\n          defaultSelectedKeys={['1']}\r\n          defaultOpenKeys={['1']}\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n          inlineCollapsed={collapsed}\r\n        >\r\n          <Menu.Item key=\"1\" >\r\n            Option 1\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\" >\r\n            Option 2\r\n          </Menu.Item>\r\n          <Menu.Item key=\"3\">\r\n            Option 3\r\n          </Menu.Item>\r\n        </Menu>\r\n     </>\r\n        \r\n    )\r\n\r\n\r\n    \r\n}\r\n\r\nexport default SideBar","import logo from './logo.svg';\r\nimport './App.css';\r\nimport 'antd/dist/antd.css'\r\nimport { Layout } from 'antd';\r\n\r\nimport Sidebar from './components/sidebar'\r\nconst { Header, Content, Footer } = Layout;\r\nfunction App() {\r\n\r\n  \r\n  return (\r\n    \r\n    <Layout style={{ minHeight: '100vh' }}>\r\n\r\n    <Layout className=\"site-layout\">\r\n          <Header className=\"site-layout-background\" style={{ padding: 0 }} />\r\n          <Content style={{ margin: '0 16px' }}>\r\n            <div className=\"site-layout-background\" style={{ padding: 30, minHeight: 365 }}>\r\n             Content area\r\n            </div>\r\n          </Content>\r\n          <Footer style={{ textAlign: 'center' }}>Created By Ibrahim Waheed using Antd</Footer>\r\n        </Layout>\r\n     </Layout>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}